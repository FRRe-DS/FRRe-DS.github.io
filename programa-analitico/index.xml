<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programa Analítico on FRRe - Desarrollo de Software</title><link>https://frre-dacs.github.io/programa-analitico/</link><description>Recent content in Programa Analítico on FRRe - Desarrollo de Software</description><generator>Hugo -- gohugo.io</generator><language>ES-ar</language><atom:link href="https://frre-dacs.github.io/programa-analitico/index.xml" rel="self" type="application/rss+xml"/><item><title>UNIDAD 1 - Arquitectura de aplicaciones multicapa.</title><link>https://frre-dacs.github.io/programa-analitico/unidad-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://frre-dacs.github.io/programa-analitico/unidad-01/</guid><description> Arquitectura de aplicaciones multicapa Repaso de las arquitecturas más comunes en sistemas distribuidos. Dos y tres capas. Modelo de tres capas, la tendencia actual. Modelo distribuido y de microservices, introducción. Publicadores y consumidores de datos. Patrones de diseño en arquitecturas distribuidas, Event-Sourcing.
Objetivos específicos Discriminar las diferencias conceptuales entre las distintas tecnologías existentes.</description></item><item><title>UNIDAD 2</title><link>https://frre-dacs.github.io/programa-analitico/unidad-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://frre-dacs.github.io/programa-analitico/unidad-02/</guid><description>Servicios de BackEnd y servidores de aplicaciones Arquitecturas de sistemas cliente servidor de 2 y 3 capas. Como se implementa una capa de negocios. Objetos basados en clases reutilizables. Modelos de ejecución actuales. Máquinas virtuales, containers y virtualización a nivel SO. Compiladores just-in-time. Distribución de aplicaciones a través de la red. Frameworks de persistencia, hibernate, JPA.
Objetivos específicos Seleccionar y aplicar correctamente las tecnologías existentes en el mercado. Que sepa analizar el contexto del problema y resuelva el mismo con la mejor herramienta posible.</description></item><item><title>UNIDAD 3</title><link>https://frre-dacs.github.io/programa-analitico/unidad-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://frre-dacs.github.io/programa-analitico/unidad-03/</guid><description>El cliente liviano Desarrollo con clientes livianos, el rol de los navegadores de internet en las tecnologías actuales. HTML. Arquitectura de un navegador de internet. Aplicaciones para Web: escenarios que soluciona. HTML dinámico: formas de generarlo. Arquitectura del servidor HTTP. Guiones (scripts). Scripting de lado del servidor. Scripting del lado del cliente. Lenguajes de scripting, generalidades. Formularios Web: qué son, cómo funcionan. Aplicaciones HTTP. Mantenimiento de sesiones. Estructuras de memoria, y estructuras relacionales para mantener sesiones.</description></item><item><title>UNIDAD 4</title><link>https://frre-dacs.github.io/programa-analitico/unidad-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://frre-dacs.github.io/programa-analitico/unidad-04/</guid><description>Aplicaciones distribuidas y servicios de internet Evolución de los sistemas distribuidos. Desarrollo de aplicaciones distribuidas con clientes pesados y decodificadores de XML. Servicios Web en la internet. Protocolo de acceso simple a objetos SOAP. Modelo REST, Open Data Protocol, ATOM, JSON. Estándares basados en el modelo REST. Generalidades de JSON y su comparación con XML. HTML 5 Websockets. WebAPI. Conexiones long-polling, forever frame, server-sent events y websockets, ventajas y desventajas.</description></item><item><title>UNIDAD 5</title><link>https://frre-dacs.github.io/programa-analitico/unidad-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://frre-dacs.github.io/programa-analitico/unidad-05/</guid><description>Frameworks de desarrollo de uso en la industria La tecnología .Net, Java, Golang, Rust. Similitudes y diferencias en el modelo de ejecución. Arquitectura de las máquinas virtuales específicas. Clientes pesados. Clientes livianos. Objetos de negocio. Capa de acceso a datos. Framework de persistencia. Capa de fachada web y cliente inteligente. Entornos integrados de desarrollo. Ciclos de vida de una aplicación. Servicios de los entornos de desarrollo integrados (IDE) modernos. Servidores de integración continua.</description></item><item><title>UNIDAD 6</title><link>https://frre-dacs.github.io/programa-analitico/unidad-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://frre-dacs.github.io/programa-analitico/unidad-06/</guid><description>Las tecnologías emergentes: la Nube Comparativa entre sistemas en la nube y sistemas sobre demanda. El software como servicio. La infraestructura como servicio. El ecosistema de desarrollo, venta de aplicaciones, entorno de ejecución, dependencia de servicios específicos basados en la nube: localización y seguimiento, licenciamiento, autenticación y autorización distribuidas. Servicios en la nube para clientes convencionales y para dispositivos móviles. Comparativas entre Amazon Cloud Services, Windows Azure, Google Apps, y su integración con las IDEs correspondientes.</description></item></channel></rss>