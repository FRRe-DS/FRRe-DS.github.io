<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Capa de Acceso a Datos on FRRe - Desarrollo de Software</title><link>https://frre-dacs.github.io/teoria-practicos/acceso-datos/</link><description>Recent content in Capa de Acceso a Datos on FRRe - Desarrollo de Software</description><generator>Hugo</generator><language>ES-ar</language><atom:link href="https://frre-dacs.github.io/teoria-practicos/acceso-datos/index.xml" rel="self" type="application/rss+xml"/><item><title>Object Relational Mapping</title><link>https://frre-dacs.github.io/teoria-practicos/acceso-datos/orm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://frre-dacs.github.io/teoria-practicos/acceso-datos/orm/</guid><description>¿Qué es una ORM? Una ORM procede de las siglas (Object Relational Mapping). Es un modelo de programación que transforma las tablas de las bases de datos en entidades para simplificar enormemente la tarea del programador. El trabajo deja de ser manual ya que el ORM lo realizara de forma independiente de la base de datos. Además, gracias al mapeo automático podrás cambiar el motor de la base de datos fácilmente.</description></item><item><title>Object Document Mapper</title><link>https://frre-dacs.github.io/teoria-practicos/acceso-datos/odm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://frre-dacs.github.io/teoria-practicos/acceso-datos/odm/</guid><description>Introducción Cuando queremos guardar en una DB info solemos usar su lenguaje propio dentro de nuestro código. Pero a veces tenemos que hacer todo un esfuerzo para que este lenguaje de consulta funcione dentro de nuestro código. Esto se puede evitar con un orm, o un ODM en el caso de una base de datos no relacional como MongoDB. El ODM hace de intermediario entre la app y la DB así tenemos métodos propios que hacen todo el trabajo.</description></item></channel></rss>